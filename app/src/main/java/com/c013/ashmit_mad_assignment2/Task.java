package com.c013.ashmit_mad_assignment2;

/**
 * Task Model Class
 * Represents a single To-Do task with description, priority, and timestamp.
 * The unique ID (Firebase key) is managed separately to avoid deserialization errors.
 */
public class Task {
    // ‚ùå Removed: private String taskId;

    private String description;
    private String priority;
    private long timestamp;

    // üí° NEW: Field to hold the unique key/path ID from Firebase for app use
    private String firebaseKey;

    /**
     * Default constructor required for Firebase.
     */
    public Task() {
        // Empty constructor needed for Firebase
    }

    /**
     * Parameterized constructor to create a new Task.
     * Note: Does NOT include the taskId, as it's generated by Firebase.
     * @param description Task description/content
     * @param priority Priority level (High, Medium, Low)
     */
    public Task(String description, String priority) {
        this.description = description;
        this.priority = priority;
        this.timestamp = System.currentTimeMillis();
    }

    // ==================== Getters and Setters for Firebase Key ====================

    /**
     * Gets the unique ID (key) assigned to this task in the Firebase database.
     * @return The Firebase key (e.g., "-M-...)
     */
    public String getFirebaseKey() {
        return firebaseKey;
    }

    /**
     * Sets the unique ID (key) retrieved from the Firebase database path.
     * This is set during the read operation in MainActivity.
     * @param firebaseKey The unique database key
     */
    public void setFirebaseKey(String firebaseKey) {
        this.firebaseKey = firebaseKey;
    }

    // ==================== Standard Getters and Setters ====================
    // These must match the fields stored in Firebase.

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getPriority() {
        return priority;
    }

    public void setPriority(String priority) {
        this.priority = priority;
    }

    public long getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(long timestamp) {
        this.timestamp = timestamp;
    }

    // ==================== Helper Methods ====================

    /**
     * Get numerical value for priority to enable sorting.
     * Higher value = Higher priority
     * @return Integer value representing priority (3=High, 2=Medium, 1=Low)
     */
    public int getPriorityValue() {
        switch (priority) {
            case "High":
                return 3;
            case "Medium":
                return 2;
            case "Low":
                return 1;
            default:
                return 0;
        }
    }

    /**
     * Override toString for debugging purposes
     */
    @Override
    public String toString() {
        return "Task{" +
                "firebaseKey='" + firebaseKey + '\'' +
                ", description='" + description + '\'' +
                ", priority='" + priority + '\'' +
                ", timestamp=" + timestamp +
                '}';
    }
}